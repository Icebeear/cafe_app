version: '3.8'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "alembic upgrade head &&
                    uvicorn main:app --reload --port=8000 --host=0.0.0.0"
    ports:
     - 8000:8000
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy


  db:
    image: postgres:15.1-alpine
    container_name: main-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -p ${DB_PORT}" ]
      interval: 2s
      timeout: 2s
      retries: 3


  test-db:
    image: postgres:15.1-alpine
    container_name: test-db
    environment:
      POSTGRES_DB: ${DB_NAME_TEST}
      POSTGRES_USER: ${DB_USER_TEST}
      POSTGRES_PASSWORD: ${DB_PASS_TEST}
    ports:
      - ${DB_PORT_TEST}:5432
    command: postgres -p ${DB_PORT_TEST}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER_TEST} -p ${DB_PORT_TEST}" ]
      interval: 2s
      timeout: 2s
      retries: 3


  tests:
    container_name: tests
    build:
      context: .
    command: sh -c "pytest -v tests/"
    ports:
     - 6000:6000
    env_file:
      - .env.dev
    depends_on:
      test-db:
        condition: service_healthy
      redis:
        condition: service_healthy


  redis:
    container_name: redis
    image: redis:7.2-rc1-alpine
    restart: on-failure
    ports:
      - "6379:6379"
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
